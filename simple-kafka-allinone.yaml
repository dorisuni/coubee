---
apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: kafka
spec:
  selector:
    app: kafka
  ports:
    - name: zookeeper
      port: 2181
      targetPort: 2181
    - name: kafka
      port: 9092
      targetPort: 9092
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: kafka
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - name: zookeeper
      port: 2181
      targetPort: 2181
    - name: kafka
      port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: obsidiandynamics/kafka:latest
        ports:
        - containerPort: 2181
          name: zookeeper
        - containerPort: 9092
          name: kafka
        env:
        - name: KAFKA_LISTENERS
          value: "INTERNAL://:29092,EXTERNAL://:9092"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INTERNAL://kafka-0.kafka-headless.kafka.svc.cluster.local:29092,EXTERNAL://kafka-0.kafka-headless.kafka.svc.cluster.local:9092"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "INTERNAL"
        - name: KAFKA_ZOOKEEPER_SESSION_TIMEOUT
          value: "6000"
        - name: KAFKA_RESTART_ATTEMPTS
          value: "10"
        - name: KAFKA_RESTART_DELAY
          value: "5"
        - name: ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL
          value: "0"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper/data
        resources:
          requests:
            memory: "1Gi"      # 512Mi → 1Gi (2배 증가)
            cpu: "500m"        # 250m → 500m (2배 증가)
          limits:
            memory: "2Gi"      # 1Gi → 2Gi (2배 증가)
            cpu: "1000m"       # 500m → 1000m (2배 증가)
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
  - metadata:
      name: zookeeper-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafdrop
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafdrop
  template:
    metadata:
      labels:
        app: kafdrop
    spec:
      containers:
      - name: kafdrop
        image: obsidiandynamics/kafdrop:3.31.0
        ports:
        - containerPort: 9000
        env:
        - name: KAFKA_BROKERCONNECT
          value: "kafka-service:29092"
        - name: JVM_OPTS
          value: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
        resources:
          requests:
            memory: "128Mi"    # 64Mi → 128Mi
            cpu: "100m"        # 50m → 100m
          limits:
            memory: "256Mi"    # 128Mi → 256Mi
            cpu: "200m"        # 100m → 200m
---
apiVersion: v1
kind: Service
metadata:
  name: kafdrop-service
  namespace: kafka
spec:
  selector:
    app: kafdrop
  ports:
    - port: 9000
      targetPort: 9000
  type: ClusterIP
